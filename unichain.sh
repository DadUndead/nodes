channel_logo() {
  echo -e '\033[0;31m'
  echo -e '‚îå‚îê ‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚î¨‚îê‚î¨‚î¨ ‚î¨  ‚îå‚îÄ‚îê‚î¨ ‚î¨‚îå‚îê ‚î¨‚î¨  '
  echo -e '‚îú‚î¥‚îê‚îÇ ‚îÇ‚îÇ ‚î¨‚îú‚îÄ‚î§ ‚îÇ ‚îÇ‚îî‚î¨‚îò  ‚îî‚îÄ‚îê‚îî‚î¨‚îò‚îú‚î¥‚îê‚îÇ‚îÇ  '
  echo -e '‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚î¥ ‚î¥ ‚î¥ ‚î¥ ‚î¥   ‚îî‚îÄ‚îò ‚î¥ ‚îî‚îÄ‚îò‚î¥‚î¥‚îÄ‚îò'
  echo -e '\e[0m'
  echo -e "\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–∞–º—ã–π 4ekHyTbIu* –∫–∞–Ω–∞–ª –≤ –∫—Ä–∏–ø—Ç–µ @bogatiy_sybil [üí∏]"
}

download_node() {
  echo '–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...'

  sudo apt update -y && sudo apt upgrade -y
  sudo apt-get install make build-essential unzip lz4 gcc git jq -y

  sudo apt install docker.io -y

  sudo systemctl start docker
  sudo systemctl enable docker

  sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  sudo chmod +x /usr/local/bin/docker-compose

  git clone https://github.com/Uniswap/unichain-node
  cd unichain-node || { echo -e "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"; return; }

  sed -i '/^[[:space:]]*#.*\.env\.mainnet/s/^[[:space:]]*#/ /' docker-compose.yml

  sudo docker-compose up -d
}

restart_node() {
  HOMEDIR="$HOME"
  sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down
  sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" up -d

  echo 'Unichain –±—ã–ª –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω'
}

check_node() {
  response=$(curl -s -d '{"id":1,"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["latest",false]}' \
    -H "Content-Type: application/json" http://localhost:8545)

  echo -e "${BLUE}RESPONSE:${RESET} $response"
}

check_logs_op_node() {
  sudo docker logs unichain-node-op-node-1 --tail 300
}

check_logs_unichain() {
  sudo docker logs unichain-node-execution-client-1 --tail 300
}

stop_node() {
  HOMEDIR="$HOME"
  sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down
}

update_node() {
  cd $HOME

  HOMEDIR="$HOME"
  sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down

  op_node_container=$(docker ps --filter "name=op-node" --format "{{.ID}}")
  op_geth_container=$(docker ps --filter "name=op-geth" --format "{{.ID}}")

  docker stop "$op_node_container"
  docker stop "$op_geth_container"

  docker rm "$op_node_container"
  docker rm "$op_geth_container"

  P2P_PRIV_KEY=$(cat $HOME/unichain-node/opnode-data/opnode_p2p_priv.txt)
  GETH_PRIV_KEY=$(cat $HOME/unichain-node/geth-data/geth/nodekey)

  if [ -z "$P2P_PRIV_KEY" ] || [ -z "$GETH_PRIV_KEY" ]; then
    echo "–û–¥–∏–Ω –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–∏–∫–æ–≤ –ø—É—Å—Ç–æ–π. –í—ã—Ö–æ–¥–∏–º..."
    exit 1
  else
    echo "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º."
  fi

  sudo rm -rf unichain-node/
  git clone https://github.com/Uniswap/unichain-node

  cd unichain-node

  sed -i '/^[[:space:]]*#.*\.env\.mainnet/s/^[[:space:]]*#/ /' docker-compose.yml

  mkdir opnode-data
  cd opnode-data
  echo $P2P_PRIV_KEY > opnode_p2p_priv.txt

  cd $HOME/unichain-node
  mkdir geth-data
  cd geth-data
  mkdir geth
  cd geth
  echo $GETH_PRIV_KEY > nodekey

  cd $HOME/unichain-node

  sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" up -d

  echo '–ù–æ–¥–∞ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–µ–∞.'
}

display_private_key() {
  cd $HOME
  echo -e '–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω–∏–∫ GETH: \n' && cat unichain-node/geth-data/geth/nodekey
  echo -e '–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω–∏–∫ OP-NODE: \n' && cat unichain-node/opnode-data/opnode_p2p_priv.txt
}

exit_from_script() {
  exit 0
}

while true; do
    channel_logo
    sleep 2
    echo -e "\n\n–ú–µ–Ω—é:"
    echo "1. üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "2. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É"
    echo "3. üïµÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–¥—É"
    echo "4. üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ Unichain (OP)"
    echo "5. üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ Unichain"
    echo "6. üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "7. üÜô –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "8. üîë –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á"
    echo -e "9. üö™ –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞\n"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

    case $choice in
      1)
        download_node
        ;;
      2)
        restart_node
        ;;
      3)
        check_node
        ;;
      4)
        check_logs_op_node
        ;;
      5)
        check_logs_unichain
        ;;
      6)
        stop_node
        ;;
      7)
        update_node
        ;;
      8)
        display_private_key
        ;;
      9)
        exit_from_script
        ;;
      *)
        echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
        ;;
    esac
  done
